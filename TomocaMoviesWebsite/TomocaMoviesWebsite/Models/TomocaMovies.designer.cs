#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TomocaMoviesWebsite.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DBTomocaUpdate")]
	public partial class TomocaMoviesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActor(Actor instance);
    partial void UpdateActor(Actor instance);
    partial void DeleteActor(Actor instance);
    partial void InsertYoutubeReview(YoutubeReview instance);
    partial void UpdateYoutubeReview(YoutubeReview instance);
    partial void DeleteYoutubeReview(YoutubeReview instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertDirector(Director instance);
    partial void UpdateDirector(Director instance);
    partial void DeleteDirector(Director instance);
    partial void InsertGenre(Genre instance);
    partial void UpdateGenre(Genre instance);
    partial void DeleteGenre(Genre instance);
    partial void InsertMiAnLien(MiAnLien instance);
    partial void UpdateMiAnLien(MiAnLien instance);
    partial void DeleteMiAnLien(MiAnLien instance);
    partial void InsertMovieActor(MovieActor instance);
    partial void UpdateMovieActor(MovieActor instance);
    partial void DeleteMovieActor(MovieActor instance);
    partial void InsertMovieDirector(MovieDirector instance);
    partial void UpdateMovieDirector(MovieDirector instance);
    partial void DeleteMovieDirector(MovieDirector instance);
    partial void InsertMovy(Movy instance);
    partial void UpdateMovy(Movy instance);
    partial void DeleteMovy(Movy instance);
    partial void InsertMoviesGenre(MoviesGenre instance);
    partial void UpdateMoviesGenre(MoviesGenre instance);
    partial void DeleteMoviesGenre(MoviesGenre instance);
    partial void InsertMovieTheater(MovieTheater instance);
    partial void UpdateMovieTheater(MovieTheater instance);
    partial void DeleteMovieTheater(MovieTheater instance);
    partial void InsertNew(New instance);
    partial void UpdateNew(New instance);
    partial void DeleteNew(New instance);
    partial void InsertReviewOfMovie(ReviewOfMovie instance);
    partial void UpdateReviewOfMovie(ReviewOfMovie instance);
    partial void DeleteReviewOfMovie(ReviewOfMovie instance);
    partial void InsertTheater(Theater instance);
    partial void UpdateTheater(Theater instance);
    partial void DeleteTheater(Theater instance);
    partial void InsertTicket(Ticket instance);
    partial void UpdateTicket(Ticket instance);
    partial void DeleteTicket(Ticket instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public TomocaMoviesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DBTomocaUpdateConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TomocaMoviesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TomocaMoviesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TomocaMoviesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TomocaMoviesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Actor> Actors
		{
			get
			{
				return this.GetTable<Actor>();
			}
		}
		
		public System.Data.Linq.Table<YoutubeReview> YoutubeReviews
		{
			get
			{
				return this.GetTable<YoutubeReview>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<Director> Directors
		{
			get
			{
				return this.GetTable<Director>();
			}
		}
		
		public System.Data.Linq.Table<Genre> Genres
		{
			get
			{
				return this.GetTable<Genre>();
			}
		}
		
		public System.Data.Linq.Table<MiAnLien> MiAnLiens
		{
			get
			{
				return this.GetTable<MiAnLien>();
			}
		}
		
		public System.Data.Linq.Table<MovieActor> MovieActors
		{
			get
			{
				return this.GetTable<MovieActor>();
			}
		}
		
		public System.Data.Linq.Table<MovieDirector> MovieDirectors
		{
			get
			{
				return this.GetTable<MovieDirector>();
			}
		}
		
		public System.Data.Linq.Table<Movy> Movies
		{
			get
			{
				return this.GetTable<Movy>();
			}
		}
		
		public System.Data.Linq.Table<MoviesGenre> MoviesGenres
		{
			get
			{
				return this.GetTable<MoviesGenre>();
			}
		}
		
		public System.Data.Linq.Table<MovieTheater> MovieTheaters
		{
			get
			{
				return this.GetTable<MovieTheater>();
			}
		}
		
		public System.Data.Linq.Table<New> News
		{
			get
			{
				return this.GetTable<New>();
			}
		}
		
		public System.Data.Linq.Table<ReviewOfMovie> ReviewOfMovies
		{
			get
			{
				return this.GetTable<ReviewOfMovie>();
			}
		}
		
		public System.Data.Linq.Table<Theater> Theaters
		{
			get
			{
				return this.GetTable<Theater>();
			}
		}
		
		public System.Data.Linq.Table<Ticket> Tickets
		{
			get
			{
				return this.GetTable<Ticket>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Actors")]
	public partial class Actor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActorID;
		
		private string _Name;
		
		private string _Nationality;
		
		private System.Nullable<System.DateTime> _Birth;
		
		private EntitySet<MovieActor> _MovieActors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActorIDChanging(int value);
    partial void OnActorIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNationalityChanging(string value);
    partial void OnNationalityChanged();
    partial void OnBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthChanged();
    #endregion
		
		public Actor()
		{
			this._MovieActors = new EntitySet<MovieActor>(new Action<MovieActor>(this.attach_MovieActors), new Action<MovieActor>(this.detach_MovieActors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ActorID
		{
			get
			{
				return this._ActorID;
			}
			set
			{
				if ((this._ActorID != value))
				{
					this.OnActorIDChanging(value);
					this.SendPropertyChanging();
					this._ActorID = value;
					this.SendPropertyChanged("ActorID");
					this.OnActorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth", DbType="Date")]
		public System.Nullable<System.DateTime> Birth
		{
			get
			{
				return this._Birth;
			}
			set
			{
				if ((this._Birth != value))
				{
					this.OnBirthChanging(value);
					this.SendPropertyChanging();
					this._Birth = value;
					this.SendPropertyChanged("Birth");
					this.OnBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actor_MovieActor", Storage="_MovieActors", ThisKey="ActorID", OtherKey="ActorID")]
		public EntitySet<MovieActor> MovieActors
		{
			get
			{
				return this._MovieActors;
			}
			set
			{
				this._MovieActors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MovieActors(MovieActor entity)
		{
			this.SendPropertyChanging();
			entity.Actor = this;
		}
		
		private void detach_MovieActors(MovieActor entity)
		{
			this.SendPropertyChanging();
			entity.Actor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.YoutubeReviews")]
	public partial class YoutubeReview : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _YoutubeID;
		
		private string _Author;
		
		private string _Image;
		
		private string _Video;
		
		private EntitySet<ReviewOfMovie> _ReviewOfMovies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnYoutubeIDChanging(int value);
    partial void OnYoutubeIDChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnVideoChanging(string value);
    partial void OnVideoChanged();
    #endregion
		
		public YoutubeReview()
		{
			this._ReviewOfMovies = new EntitySet<ReviewOfMovie>(new Action<ReviewOfMovie>(this.attach_ReviewOfMovies), new Action<ReviewOfMovie>(this.detach_ReviewOfMovies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YoutubeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int YoutubeID
		{
			get
			{
				return this._YoutubeID;
			}
			set
			{
				if ((this._YoutubeID != value))
				{
					this.OnYoutubeIDChanging(value);
					this.SendPropertyChanging();
					this._YoutubeID = value;
					this.SendPropertyChanged("YoutubeID");
					this.OnYoutubeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Video", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Video
		{
			get
			{
				return this._Video;
			}
			set
			{
				if ((this._Video != value))
				{
					this.OnVideoChanging(value);
					this.SendPropertyChanging();
					this._Video = value;
					this.SendPropertyChanged("Video");
					this.OnVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="YoutubeReview_ReviewOfMovie", Storage="_ReviewOfMovies", ThisKey="YoutubeID", OtherKey="YoutubeID")]
		public EntitySet<ReviewOfMovie> ReviewOfMovies
		{
			get
			{
				return this._ReviewOfMovies;
			}
			set
			{
				this._ReviewOfMovies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReviewOfMovies(ReviewOfMovie entity)
		{
			this.SendPropertyChanging();
			entity.YoutubeReview = this;
		}
		
		private void detach_ReviewOfMovies(ReviewOfMovie entity)
		{
			this.SendPropertyChanging();
			entity.YoutubeReview = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CityID;
		
		private string _City1;
		
		private EntitySet<MovieTheater> _MovieTheaters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnCity1Changing(string value);
    partial void OnCity1Changed();
    #endregion
		
		public City()
		{
			this._MovieTheaters = new EntitySet<MovieTheater>(new Action<MovieTheater>(this.attach_MovieTheaters), new Action<MovieTheater>(this.detach_MovieTheaters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="City", Storage="_City1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string City1
		{
			get
			{
				return this._City1;
			}
			set
			{
				if ((this._City1 != value))
				{
					this.OnCity1Changing(value);
					this.SendPropertyChanging();
					this._City1 = value;
					this.SendPropertyChanged("City1");
					this.OnCity1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_MovieTheater", Storage="_MovieTheaters", ThisKey="CityID", OtherKey="CityID")]
		public EntitySet<MovieTheater> MovieTheaters
		{
			get
			{
				return this._MovieTheaters;
			}
			set
			{
				this._MovieTheaters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MovieTheaters(MovieTheater entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_MovieTheaters(MovieTheater entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comments")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommentID;
		
		private int _MovieID;
		
		private int _UserID;
		
		private string _Subject;
		
		private string _Status;
		
		private System.DateTime _CreateTime;
		
		private EntityRef<Movy> _Movy;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommentIDChanging(int value);
    partial void OnCommentIDChanged();
    partial void OnMovieIDChanging(int value);
    partial void OnMovieIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public Comment()
		{
			this._Movy = default(EntityRef<Movy>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieID", DbType="Int NOT NULL")]
		public int MovieID
		{
			get
			{
				return this._MovieID;
			}
			set
			{
				if ((this._MovieID != value))
				{
					if (this._Movy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMovieIDChanging(value);
					this.SendPropertyChanging();
					this._MovieID = value;
					this.SendPropertyChanged("MovieID");
					this.OnMovieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Movy_Comment", Storage="_Movy", ThisKey="MovieID", OtherKey="MovieID", IsForeignKey=true)]
		public Movy Movy
		{
			get
			{
				return this._Movy.Entity;
			}
			set
			{
				Movy previousValue = this._Movy.Entity;
				if (((previousValue != value) 
							|| (this._Movy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Movy.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._Movy.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._MovieID = value.MovieID;
					}
					else
					{
						this._MovieID = default(int);
					}
					this.SendPropertyChanged("Movy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Directors")]
	public partial class Director : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DirectorID;
		
		private string _Name;
		
		private string _Nationality;
		
		private System.Nullable<System.DateTime> _Birth;
		
		private EntitySet<MovieDirector> _MovieDirectors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDirectorIDChanging(int value);
    partial void OnDirectorIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNationalityChanging(string value);
    partial void OnNationalityChanged();
    partial void OnBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthChanged();
    #endregion
		
		public Director()
		{
			this._MovieDirectors = new EntitySet<MovieDirector>(new Action<MovieDirector>(this.attach_MovieDirectors), new Action<MovieDirector>(this.detach_MovieDirectors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DirectorID
		{
			get
			{
				return this._DirectorID;
			}
			set
			{
				if ((this._DirectorID != value))
				{
					this.OnDirectorIDChanging(value);
					this.SendPropertyChanging();
					this._DirectorID = value;
					this.SendPropertyChanged("DirectorID");
					this.OnDirectorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth", DbType="Date")]
		public System.Nullable<System.DateTime> Birth
		{
			get
			{
				return this._Birth;
			}
			set
			{
				if ((this._Birth != value))
				{
					this.OnBirthChanging(value);
					this.SendPropertyChanging();
					this._Birth = value;
					this.SendPropertyChanged("Birth");
					this.OnBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Director_MovieDirector", Storage="_MovieDirectors", ThisKey="DirectorID", OtherKey="DirectorID")]
		public EntitySet<MovieDirector> MovieDirectors
		{
			get
			{
				return this._MovieDirectors;
			}
			set
			{
				this._MovieDirectors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MovieDirectors(MovieDirector entity)
		{
			this.SendPropertyChanging();
			entity.Director = this;
		}
		
		private void detach_MovieDirectors(MovieDirector entity)
		{
			this.SendPropertyChanging();
			entity.Director = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Genres")]
	public partial class Genre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GenreID;
		
		private string _GenreName;
		
		private EntitySet<MoviesGenre> _MoviesGenres;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGenreIDChanging(int value);
    partial void OnGenreIDChanged();
    partial void OnGenreNameChanging(string value);
    partial void OnGenreNameChanged();
    #endregion
		
		public Genre()
		{
			this._MoviesGenres = new EntitySet<MoviesGenre>(new Action<MoviesGenre>(this.attach_MoviesGenres), new Action<MoviesGenre>(this.detach_MoviesGenres));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenreID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GenreID
		{
			get
			{
				return this._GenreID;
			}
			set
			{
				if ((this._GenreID != value))
				{
					this.OnGenreIDChanging(value);
					this.SendPropertyChanging();
					this._GenreID = value;
					this.SendPropertyChanged("GenreID");
					this.OnGenreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenreName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string GenreName
		{
			get
			{
				return this._GenreName;
			}
			set
			{
				if ((this._GenreName != value))
				{
					this.OnGenreNameChanging(value);
					this.SendPropertyChanging();
					this._GenreName = value;
					this.SendPropertyChanged("GenreName");
					this.OnGenreNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genre_MoviesGenre", Storage="_MoviesGenres", ThisKey="GenreID", OtherKey="GenreID")]
		public EntitySet<MoviesGenre> MoviesGenres
		{
			get
			{
				return this._MoviesGenres;
			}
			set
			{
				this._MoviesGenres.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MoviesGenres(MoviesGenre entity)
		{
			this.SendPropertyChanging();
			entity.Genre = this;
		}
		
		private void detach_MoviesGenres(MoviesGenre entity)
		{
			this.SendPropertyChanging();
			entity.Genre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MiAnLien")]
	public partial class MiAnLien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MalID;
		
		private int _MovieID;
		
		private int _TheaterID;
		
		private System.DateTime _Time;
		
		private string _A4;
		
		private string _A5;
		
		private string _A6;
		
		private string _A7;
		
		private string _A8;
		
		private string _A9;
		
		private string _A10;
		
		private string _A11;
		
		private string _A12;
		
		private string _A13;
		
		private string _B2;
		
		private string _B3;
		
		private string _B4;
		
		private string _B5;
		
		private string _B6;
		
		private string _B7;
		
		private string _B8;
		
		private string _B9;
		
		private string _B10;
		
		private string _B11;
		
		private string _B12;
		
		private string _B13;
		
		private string _B14;
		
		private string _B15;
		
		private string _C2;
		
		private string _C3;
		
		private string _C4;
		
		private string _C5;
		
		private string _C6;
		
		private string _C7;
		
		private string _C8;
		
		private string _C9;
		
		private string _C10;
		
		private string _C11;
		
		private string _C12;
		
		private string _C13;
		
		private string _C14;
		
		private string _C15;
		
		private string _D2;
		
		private string _D3;
		
		private string _D4;
		
		private string _D5;
		
		private string _D6;
		
		private string _D7;
		
		private string _D8;
		
		private string _D9;
		
		private string _D10;
		
		private string _D11;
		
		private string _D12;
		
		private string _D13;
		
		private string _D14;
		
		private string _D15;
		
		private string _E2;
		
		private string _E3;
		
		private string _E4;
		
		private string _E5;
		
		private string _E6;
		
		private string _E7;
		
		private string _E8;
		
		private string _E9;
		
		private string _E10;
		
		private string _E11;
		
		private string _E12;
		
		private string _E13;
		
		private string _E14;
		
		private string _E15;
		
		private string _F1;
		
		private string _F2;
		
		private string _F3;
		
		private string _F4;
		
		private string _F5;
		
		private string _F6;
		
		private string _F7;
		
		private string _F8;
		
		private string _F9;
		
		private string _F10;
		
		private string _F11;
		
		private string _F12;
		
		private string _F13;
		
		private string _F14;
		
		private string _F15;
		
		private string _F16;
		
		private EntitySet<Ticket> _Tickets;
		
		private EntityRef<Movy> _Movy;
		
		private EntityRef<MovieTheater> _MovieTheater;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMalIDChanging(int value);
    partial void OnMalIDChanged();
    partial void OnMovieIDChanging(int value);
    partial void OnMovieIDChanged();
    partial void OnTheaterIDChanging(int value);
    partial void OnTheaterIDChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnA4Changing(string value);
    partial void OnA4Changed();
    partial void OnA5Changing(string value);
    partial void OnA5Changed();
    partial void OnA6Changing(string value);
    partial void OnA6Changed();
    partial void OnA7Changing(string value);
    partial void OnA7Changed();
    partial void OnA8Changing(string value);
    partial void OnA8Changed();
    partial void OnA9Changing(string value);
    partial void OnA9Changed();
    partial void OnA10Changing(string value);
    partial void OnA10Changed();
    partial void OnA11Changing(string value);
    partial void OnA11Changed();
    partial void OnA12Changing(string value);
    partial void OnA12Changed();
    partial void OnA13Changing(string value);
    partial void OnA13Changed();
    partial void OnB2Changing(string value);
    partial void OnB2Changed();
    partial void OnB3Changing(string value);
    partial void OnB3Changed();
    partial void OnB4Changing(string value);
    partial void OnB4Changed();
    partial void OnB5Changing(string value);
    partial void OnB5Changed();
    partial void OnB6Changing(string value);
    partial void OnB6Changed();
    partial void OnB7Changing(string value);
    partial void OnB7Changed();
    partial void OnB8Changing(string value);
    partial void OnB8Changed();
    partial void OnB9Changing(string value);
    partial void OnB9Changed();
    partial void OnB10Changing(string value);
    partial void OnB10Changed();
    partial void OnB11Changing(string value);
    partial void OnB11Changed();
    partial void OnB12Changing(string value);
    partial void OnB12Changed();
    partial void OnB13Changing(string value);
    partial void OnB13Changed();
    partial void OnB14Changing(string value);
    partial void OnB14Changed();
    partial void OnB15Changing(string value);
    partial void OnB15Changed();
    partial void OnC2Changing(string value);
    partial void OnC2Changed();
    partial void OnC3Changing(string value);
    partial void OnC3Changed();
    partial void OnC4Changing(string value);
    partial void OnC4Changed();
    partial void OnC5Changing(string value);
    partial void OnC5Changed();
    partial void OnC6Changing(string value);
    partial void OnC6Changed();
    partial void OnC7Changing(string value);
    partial void OnC7Changed();
    partial void OnC8Changing(string value);
    partial void OnC8Changed();
    partial void OnC9Changing(string value);
    partial void OnC9Changed();
    partial void OnC10Changing(string value);
    partial void OnC10Changed();
    partial void OnC11Changing(string value);
    partial void OnC11Changed();
    partial void OnC12Changing(string value);
    partial void OnC12Changed();
    partial void OnC13Changing(string value);
    partial void OnC13Changed();
    partial void OnC14Changing(string value);
    partial void OnC14Changed();
    partial void OnC15Changing(string value);
    partial void OnC15Changed();
    partial void OnD2Changing(string value);
    partial void OnD2Changed();
    partial void OnD3Changing(string value);
    partial void OnD3Changed();
    partial void OnD4Changing(string value);
    partial void OnD4Changed();
    partial void OnD5Changing(string value);
    partial void OnD5Changed();
    partial void OnD6Changing(string value);
    partial void OnD6Changed();
    partial void OnD7Changing(string value);
    partial void OnD7Changed();
    partial void OnD8Changing(string value);
    partial void OnD8Changed();
    partial void OnD9Changing(string value);
    partial void OnD9Changed();
    partial void OnD10Changing(string value);
    partial void OnD10Changed();
    partial void OnD11Changing(string value);
    partial void OnD11Changed();
    partial void OnD12Changing(string value);
    partial void OnD12Changed();
    partial void OnD13Changing(string value);
    partial void OnD13Changed();
    partial void OnD14Changing(string value);
    partial void OnD14Changed();
    partial void OnD15Changing(string value);
    partial void OnD15Changed();
    partial void OnE2Changing(string value);
    partial void OnE2Changed();
    partial void OnE3Changing(string value);
    partial void OnE3Changed();
    partial void OnE4Changing(string value);
    partial void OnE4Changed();
    partial void OnE5Changing(string value);
    partial void OnE5Changed();
    partial void OnE6Changing(string value);
    partial void OnE6Changed();
    partial void OnE7Changing(string value);
    partial void OnE7Changed();
    partial void OnE8Changing(string value);
    partial void OnE8Changed();
    partial void OnE9Changing(string value);
    partial void OnE9Changed();
    partial void OnE10Changing(string value);
    partial void OnE10Changed();
    partial void OnE11Changing(string value);
    partial void OnE11Changed();
    partial void OnE12Changing(string value);
    partial void OnE12Changed();
    partial void OnE13Changing(string value);
    partial void OnE13Changed();
    partial void OnE14Changing(string value);
    partial void OnE14Changed();
    partial void OnE15Changing(string value);
    partial void OnE15Changed();
    partial void OnF1Changing(string value);
    partial void OnF1Changed();
    partial void OnF2Changing(string value);
    partial void OnF2Changed();
    partial void OnF3Changing(string value);
    partial void OnF3Changed();
    partial void OnF4Changing(string value);
    partial void OnF4Changed();
    partial void OnF5Changing(string value);
    partial void OnF5Changed();
    partial void OnF6Changing(string value);
    partial void OnF6Changed();
    partial void OnF7Changing(string value);
    partial void OnF7Changed();
    partial void OnF8Changing(string value);
    partial void OnF8Changed();
    partial void OnF9Changing(string value);
    partial void OnF9Changed();
    partial void OnF10Changing(string value);
    partial void OnF10Changed();
    partial void OnF11Changing(string value);
    partial void OnF11Changed();
    partial void OnF12Changing(string value);
    partial void OnF12Changed();
    partial void OnF13Changing(string value);
    partial void OnF13Changed();
    partial void OnF14Changing(string value);
    partial void OnF14Changed();
    partial void OnF15Changing(string value);
    partial void OnF15Changed();
    partial void OnF16Changing(string value);
    partial void OnF16Changed();
    #endregion
		
		public MiAnLien()
		{
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			this._Movy = default(EntityRef<Movy>);
			this._MovieTheater = default(EntityRef<MovieTheater>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MalID
		{
			get
			{
				return this._MalID;
			}
			set
			{
				if ((this._MalID != value))
				{
					this.OnMalIDChanging(value);
					this.SendPropertyChanging();
					this._MalID = value;
					this.SendPropertyChanged("MalID");
					this.OnMalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieID", DbType="Int NOT NULL")]
		public int MovieID
		{
			get
			{
				return this._MovieID;
			}
			set
			{
				if ((this._MovieID != value))
				{
					if (this._Movy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMovieIDChanging(value);
					this.SendPropertyChanging();
					this._MovieID = value;
					this.SendPropertyChanged("MovieID");
					this.OnMovieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheaterID", DbType="Int NOT NULL")]
		public int TheaterID
		{
			get
			{
				return this._TheaterID;
			}
			set
			{
				if ((this._TheaterID != value))
				{
					if (this._MovieTheater.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTheaterIDChanging(value);
					this.SendPropertyChanging();
					this._TheaterID = value;
					this.SendPropertyChanged("TheaterID");
					this.OnTheaterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A4", DbType="Char(5)")]
		public string A4
		{
			get
			{
				return this._A4;
			}
			set
			{
				if ((this._A4 != value))
				{
					this.OnA4Changing(value);
					this.SendPropertyChanging();
					this._A4 = value;
					this.SendPropertyChanged("A4");
					this.OnA4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A5", DbType="Char(5)")]
		public string A5
		{
			get
			{
				return this._A5;
			}
			set
			{
				if ((this._A5 != value))
				{
					this.OnA5Changing(value);
					this.SendPropertyChanging();
					this._A5 = value;
					this.SendPropertyChanged("A5");
					this.OnA5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A6", DbType="Char(5)")]
		public string A6
		{
			get
			{
				return this._A6;
			}
			set
			{
				if ((this._A6 != value))
				{
					this.OnA6Changing(value);
					this.SendPropertyChanging();
					this._A6 = value;
					this.SendPropertyChanged("A6");
					this.OnA6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A7", DbType="Char(5)")]
		public string A7
		{
			get
			{
				return this._A7;
			}
			set
			{
				if ((this._A7 != value))
				{
					this.OnA7Changing(value);
					this.SendPropertyChanging();
					this._A7 = value;
					this.SendPropertyChanged("A7");
					this.OnA7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A8", DbType="Char(5)")]
		public string A8
		{
			get
			{
				return this._A8;
			}
			set
			{
				if ((this._A8 != value))
				{
					this.OnA8Changing(value);
					this.SendPropertyChanging();
					this._A8 = value;
					this.SendPropertyChanged("A8");
					this.OnA8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A9", DbType="Char(5)")]
		public string A9
		{
			get
			{
				return this._A9;
			}
			set
			{
				if ((this._A9 != value))
				{
					this.OnA9Changing(value);
					this.SendPropertyChanging();
					this._A9 = value;
					this.SendPropertyChanged("A9");
					this.OnA9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A10", DbType="Char(5)")]
		public string A10
		{
			get
			{
				return this._A10;
			}
			set
			{
				if ((this._A10 != value))
				{
					this.OnA10Changing(value);
					this.SendPropertyChanging();
					this._A10 = value;
					this.SendPropertyChanged("A10");
					this.OnA10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A11", DbType="Char(5)")]
		public string A11
		{
			get
			{
				return this._A11;
			}
			set
			{
				if ((this._A11 != value))
				{
					this.OnA11Changing(value);
					this.SendPropertyChanging();
					this._A11 = value;
					this.SendPropertyChanged("A11");
					this.OnA11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A12", DbType="Char(5)")]
		public string A12
		{
			get
			{
				return this._A12;
			}
			set
			{
				if ((this._A12 != value))
				{
					this.OnA12Changing(value);
					this.SendPropertyChanging();
					this._A12 = value;
					this.SendPropertyChanged("A12");
					this.OnA12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A13", DbType="Char(5)")]
		public string A13
		{
			get
			{
				return this._A13;
			}
			set
			{
				if ((this._A13 != value))
				{
					this.OnA13Changing(value);
					this.SendPropertyChanging();
					this._A13 = value;
					this.SendPropertyChanged("A13");
					this.OnA13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B2", DbType="Char(5)")]
		public string B2
		{
			get
			{
				return this._B2;
			}
			set
			{
				if ((this._B2 != value))
				{
					this.OnB2Changing(value);
					this.SendPropertyChanging();
					this._B2 = value;
					this.SendPropertyChanged("B2");
					this.OnB2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B3", DbType="Char(5)")]
		public string B3
		{
			get
			{
				return this._B3;
			}
			set
			{
				if ((this._B3 != value))
				{
					this.OnB3Changing(value);
					this.SendPropertyChanging();
					this._B3 = value;
					this.SendPropertyChanged("B3");
					this.OnB3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B4", DbType="Char(5)")]
		public string B4
		{
			get
			{
				return this._B4;
			}
			set
			{
				if ((this._B4 != value))
				{
					this.OnB4Changing(value);
					this.SendPropertyChanging();
					this._B4 = value;
					this.SendPropertyChanged("B4");
					this.OnB4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B5", DbType="Char(5)")]
		public string B5
		{
			get
			{
				return this._B5;
			}
			set
			{
				if ((this._B5 != value))
				{
					this.OnB5Changing(value);
					this.SendPropertyChanging();
					this._B5 = value;
					this.SendPropertyChanged("B5");
					this.OnB5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B6", DbType="Char(5)")]
		public string B6
		{
			get
			{
				return this._B6;
			}
			set
			{
				if ((this._B6 != value))
				{
					this.OnB6Changing(value);
					this.SendPropertyChanging();
					this._B6 = value;
					this.SendPropertyChanged("B6");
					this.OnB6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B7", DbType="Char(5)")]
		public string B7
		{
			get
			{
				return this._B7;
			}
			set
			{
				if ((this._B7 != value))
				{
					this.OnB7Changing(value);
					this.SendPropertyChanging();
					this._B7 = value;
					this.SendPropertyChanged("B7");
					this.OnB7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B8", DbType="Char(5)")]
		public string B8
		{
			get
			{
				return this._B8;
			}
			set
			{
				if ((this._B8 != value))
				{
					this.OnB8Changing(value);
					this.SendPropertyChanging();
					this._B8 = value;
					this.SendPropertyChanged("B8");
					this.OnB8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B9", DbType="Char(5)")]
		public string B9
		{
			get
			{
				return this._B9;
			}
			set
			{
				if ((this._B9 != value))
				{
					this.OnB9Changing(value);
					this.SendPropertyChanging();
					this._B9 = value;
					this.SendPropertyChanged("B9");
					this.OnB9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B10", DbType="Char(5)")]
		public string B10
		{
			get
			{
				return this._B10;
			}
			set
			{
				if ((this._B10 != value))
				{
					this.OnB10Changing(value);
					this.SendPropertyChanging();
					this._B10 = value;
					this.SendPropertyChanged("B10");
					this.OnB10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B11", DbType="Char(5)")]
		public string B11
		{
			get
			{
				return this._B11;
			}
			set
			{
				if ((this._B11 != value))
				{
					this.OnB11Changing(value);
					this.SendPropertyChanging();
					this._B11 = value;
					this.SendPropertyChanged("B11");
					this.OnB11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B12", DbType="Char(5)")]
		public string B12
		{
			get
			{
				return this._B12;
			}
			set
			{
				if ((this._B12 != value))
				{
					this.OnB12Changing(value);
					this.SendPropertyChanging();
					this._B12 = value;
					this.SendPropertyChanged("B12");
					this.OnB12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B13", DbType="Char(5)")]
		public string B13
		{
			get
			{
				return this._B13;
			}
			set
			{
				if ((this._B13 != value))
				{
					this.OnB13Changing(value);
					this.SendPropertyChanging();
					this._B13 = value;
					this.SendPropertyChanged("B13");
					this.OnB13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B14", DbType="Char(5)")]
		public string B14
		{
			get
			{
				return this._B14;
			}
			set
			{
				if ((this._B14 != value))
				{
					this.OnB14Changing(value);
					this.SendPropertyChanging();
					this._B14 = value;
					this.SendPropertyChanged("B14");
					this.OnB14Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B15", DbType="Char(5)")]
		public string B15
		{
			get
			{
				return this._B15;
			}
			set
			{
				if ((this._B15 != value))
				{
					this.OnB15Changing(value);
					this.SendPropertyChanging();
					this._B15 = value;
					this.SendPropertyChanged("B15");
					this.OnB15Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C2", DbType="Char(5)")]
		public string C2
		{
			get
			{
				return this._C2;
			}
			set
			{
				if ((this._C2 != value))
				{
					this.OnC2Changing(value);
					this.SendPropertyChanging();
					this._C2 = value;
					this.SendPropertyChanged("C2");
					this.OnC2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C3", DbType="Char(5)")]
		public string C3
		{
			get
			{
				return this._C3;
			}
			set
			{
				if ((this._C3 != value))
				{
					this.OnC3Changing(value);
					this.SendPropertyChanging();
					this._C3 = value;
					this.SendPropertyChanged("C3");
					this.OnC3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C4", DbType="Char(5)")]
		public string C4
		{
			get
			{
				return this._C4;
			}
			set
			{
				if ((this._C4 != value))
				{
					this.OnC4Changing(value);
					this.SendPropertyChanging();
					this._C4 = value;
					this.SendPropertyChanged("C4");
					this.OnC4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C5", DbType="Char(5)")]
		public string C5
		{
			get
			{
				return this._C5;
			}
			set
			{
				if ((this._C5 != value))
				{
					this.OnC5Changing(value);
					this.SendPropertyChanging();
					this._C5 = value;
					this.SendPropertyChanged("C5");
					this.OnC5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C6", DbType="Char(5)")]
		public string C6
		{
			get
			{
				return this._C6;
			}
			set
			{
				if ((this._C6 != value))
				{
					this.OnC6Changing(value);
					this.SendPropertyChanging();
					this._C6 = value;
					this.SendPropertyChanged("C6");
					this.OnC6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C7", DbType="Char(5)")]
		public string C7
		{
			get
			{
				return this._C7;
			}
			set
			{
				if ((this._C7 != value))
				{
					this.OnC7Changing(value);
					this.SendPropertyChanging();
					this._C7 = value;
					this.SendPropertyChanged("C7");
					this.OnC7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C8", DbType="Char(5)")]
		public string C8
		{
			get
			{
				return this._C8;
			}
			set
			{
				if ((this._C8 != value))
				{
					this.OnC8Changing(value);
					this.SendPropertyChanging();
					this._C8 = value;
					this.SendPropertyChanged("C8");
					this.OnC8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C9", DbType="Char(5)")]
		public string C9
		{
			get
			{
				return this._C9;
			}
			set
			{
				if ((this._C9 != value))
				{
					this.OnC9Changing(value);
					this.SendPropertyChanging();
					this._C9 = value;
					this.SendPropertyChanged("C9");
					this.OnC9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C10", DbType="Char(5)")]
		public string C10
		{
			get
			{
				return this._C10;
			}
			set
			{
				if ((this._C10 != value))
				{
					this.OnC10Changing(value);
					this.SendPropertyChanging();
					this._C10 = value;
					this.SendPropertyChanged("C10");
					this.OnC10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C11", DbType="Char(5)")]
		public string C11
		{
			get
			{
				return this._C11;
			}
			set
			{
				if ((this._C11 != value))
				{
					this.OnC11Changing(value);
					this.SendPropertyChanging();
					this._C11 = value;
					this.SendPropertyChanged("C11");
					this.OnC11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C12", DbType="Char(5)")]
		public string C12
		{
			get
			{
				return this._C12;
			}
			set
			{
				if ((this._C12 != value))
				{
					this.OnC12Changing(value);
					this.SendPropertyChanging();
					this._C12 = value;
					this.SendPropertyChanged("C12");
					this.OnC12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C13", DbType="Char(5)")]
		public string C13
		{
			get
			{
				return this._C13;
			}
			set
			{
				if ((this._C13 != value))
				{
					this.OnC13Changing(value);
					this.SendPropertyChanging();
					this._C13 = value;
					this.SendPropertyChanged("C13");
					this.OnC13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C14", DbType="Char(5)")]
		public string C14
		{
			get
			{
				return this._C14;
			}
			set
			{
				if ((this._C14 != value))
				{
					this.OnC14Changing(value);
					this.SendPropertyChanging();
					this._C14 = value;
					this.SendPropertyChanged("C14");
					this.OnC14Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C15", DbType="Char(5)")]
		public string C15
		{
			get
			{
				return this._C15;
			}
			set
			{
				if ((this._C15 != value))
				{
					this.OnC15Changing(value);
					this.SendPropertyChanging();
					this._C15 = value;
					this.SendPropertyChanged("C15");
					this.OnC15Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D2", DbType="Char(5)")]
		public string D2
		{
			get
			{
				return this._D2;
			}
			set
			{
				if ((this._D2 != value))
				{
					this.OnD2Changing(value);
					this.SendPropertyChanging();
					this._D2 = value;
					this.SendPropertyChanged("D2");
					this.OnD2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D3", DbType="Char(5)")]
		public string D3
		{
			get
			{
				return this._D3;
			}
			set
			{
				if ((this._D3 != value))
				{
					this.OnD3Changing(value);
					this.SendPropertyChanging();
					this._D3 = value;
					this.SendPropertyChanged("D3");
					this.OnD3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D4", DbType="Char(5)")]
		public string D4
		{
			get
			{
				return this._D4;
			}
			set
			{
				if ((this._D4 != value))
				{
					this.OnD4Changing(value);
					this.SendPropertyChanging();
					this._D4 = value;
					this.SendPropertyChanged("D4");
					this.OnD4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D5", DbType="Char(5)")]
		public string D5
		{
			get
			{
				return this._D5;
			}
			set
			{
				if ((this._D5 != value))
				{
					this.OnD5Changing(value);
					this.SendPropertyChanging();
					this._D5 = value;
					this.SendPropertyChanged("D5");
					this.OnD5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D6", DbType="Char(5)")]
		public string D6
		{
			get
			{
				return this._D6;
			}
			set
			{
				if ((this._D6 != value))
				{
					this.OnD6Changing(value);
					this.SendPropertyChanging();
					this._D6 = value;
					this.SendPropertyChanged("D6");
					this.OnD6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D7", DbType="Char(5)")]
		public string D7
		{
			get
			{
				return this._D7;
			}
			set
			{
				if ((this._D7 != value))
				{
					this.OnD7Changing(value);
					this.SendPropertyChanging();
					this._D7 = value;
					this.SendPropertyChanged("D7");
					this.OnD7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D8", DbType="Char(5)")]
		public string D8
		{
			get
			{
				return this._D8;
			}
			set
			{
				if ((this._D8 != value))
				{
					this.OnD8Changing(value);
					this.SendPropertyChanging();
					this._D8 = value;
					this.SendPropertyChanged("D8");
					this.OnD8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D9", DbType="Char(5)")]
		public string D9
		{
			get
			{
				return this._D9;
			}
			set
			{
				if ((this._D9 != value))
				{
					this.OnD9Changing(value);
					this.SendPropertyChanging();
					this._D9 = value;
					this.SendPropertyChanged("D9");
					this.OnD9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D10", DbType="Char(5)")]
		public string D10
		{
			get
			{
				return this._D10;
			}
			set
			{
				if ((this._D10 != value))
				{
					this.OnD10Changing(value);
					this.SendPropertyChanging();
					this._D10 = value;
					this.SendPropertyChanged("D10");
					this.OnD10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D11", DbType="Char(5)")]
		public string D11
		{
			get
			{
				return this._D11;
			}
			set
			{
				if ((this._D11 != value))
				{
					this.OnD11Changing(value);
					this.SendPropertyChanging();
					this._D11 = value;
					this.SendPropertyChanged("D11");
					this.OnD11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D12", DbType="Char(5)")]
		public string D12
		{
			get
			{
				return this._D12;
			}
			set
			{
				if ((this._D12 != value))
				{
					this.OnD12Changing(value);
					this.SendPropertyChanging();
					this._D12 = value;
					this.SendPropertyChanged("D12");
					this.OnD12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D13", DbType="Char(5)")]
		public string D13
		{
			get
			{
				return this._D13;
			}
			set
			{
				if ((this._D13 != value))
				{
					this.OnD13Changing(value);
					this.SendPropertyChanging();
					this._D13 = value;
					this.SendPropertyChanged("D13");
					this.OnD13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D14", DbType="Char(5)")]
		public string D14
		{
			get
			{
				return this._D14;
			}
			set
			{
				if ((this._D14 != value))
				{
					this.OnD14Changing(value);
					this.SendPropertyChanging();
					this._D14 = value;
					this.SendPropertyChanged("D14");
					this.OnD14Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D15", DbType="Char(5)")]
		public string D15
		{
			get
			{
				return this._D15;
			}
			set
			{
				if ((this._D15 != value))
				{
					this.OnD15Changing(value);
					this.SendPropertyChanging();
					this._D15 = value;
					this.SendPropertyChanged("D15");
					this.OnD15Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E2", DbType="Char(5)")]
		public string E2
		{
			get
			{
				return this._E2;
			}
			set
			{
				if ((this._E2 != value))
				{
					this.OnE2Changing(value);
					this.SendPropertyChanging();
					this._E2 = value;
					this.SendPropertyChanged("E2");
					this.OnE2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E3", DbType="Char(5)")]
		public string E3
		{
			get
			{
				return this._E3;
			}
			set
			{
				if ((this._E3 != value))
				{
					this.OnE3Changing(value);
					this.SendPropertyChanging();
					this._E3 = value;
					this.SendPropertyChanged("E3");
					this.OnE3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E4", DbType="Char(5)")]
		public string E4
		{
			get
			{
				return this._E4;
			}
			set
			{
				if ((this._E4 != value))
				{
					this.OnE4Changing(value);
					this.SendPropertyChanging();
					this._E4 = value;
					this.SendPropertyChanged("E4");
					this.OnE4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E5", DbType="Char(5)")]
		public string E5
		{
			get
			{
				return this._E5;
			}
			set
			{
				if ((this._E5 != value))
				{
					this.OnE5Changing(value);
					this.SendPropertyChanging();
					this._E5 = value;
					this.SendPropertyChanged("E5");
					this.OnE5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E6", DbType="Char(5)")]
		public string E6
		{
			get
			{
				return this._E6;
			}
			set
			{
				if ((this._E6 != value))
				{
					this.OnE6Changing(value);
					this.SendPropertyChanging();
					this._E6 = value;
					this.SendPropertyChanged("E6");
					this.OnE6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E7", DbType="Char(5)")]
		public string E7
		{
			get
			{
				return this._E7;
			}
			set
			{
				if ((this._E7 != value))
				{
					this.OnE7Changing(value);
					this.SendPropertyChanging();
					this._E7 = value;
					this.SendPropertyChanged("E7");
					this.OnE7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E8", DbType="Char(5)")]
		public string E8
		{
			get
			{
				return this._E8;
			}
			set
			{
				if ((this._E8 != value))
				{
					this.OnE8Changing(value);
					this.SendPropertyChanging();
					this._E8 = value;
					this.SendPropertyChanged("E8");
					this.OnE8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E9", DbType="Char(5)")]
		public string E9
		{
			get
			{
				return this._E9;
			}
			set
			{
				if ((this._E9 != value))
				{
					this.OnE9Changing(value);
					this.SendPropertyChanging();
					this._E9 = value;
					this.SendPropertyChanged("E9");
					this.OnE9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E10", DbType="Char(5)")]
		public string E10
		{
			get
			{
				return this._E10;
			}
			set
			{
				if ((this._E10 != value))
				{
					this.OnE10Changing(value);
					this.SendPropertyChanging();
					this._E10 = value;
					this.SendPropertyChanged("E10");
					this.OnE10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E11", DbType="Char(5)")]
		public string E11
		{
			get
			{
				return this._E11;
			}
			set
			{
				if ((this._E11 != value))
				{
					this.OnE11Changing(value);
					this.SendPropertyChanging();
					this._E11 = value;
					this.SendPropertyChanged("E11");
					this.OnE11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E12", DbType="Char(5)")]
		public string E12
		{
			get
			{
				return this._E12;
			}
			set
			{
				if ((this._E12 != value))
				{
					this.OnE12Changing(value);
					this.SendPropertyChanging();
					this._E12 = value;
					this.SendPropertyChanged("E12");
					this.OnE12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E13", DbType="Char(5)")]
		public string E13
		{
			get
			{
				return this._E13;
			}
			set
			{
				if ((this._E13 != value))
				{
					this.OnE13Changing(value);
					this.SendPropertyChanging();
					this._E13 = value;
					this.SendPropertyChanged("E13");
					this.OnE13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E14", DbType="Char(5)")]
		public string E14
		{
			get
			{
				return this._E14;
			}
			set
			{
				if ((this._E14 != value))
				{
					this.OnE14Changing(value);
					this.SendPropertyChanging();
					this._E14 = value;
					this.SendPropertyChanged("E14");
					this.OnE14Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E15", DbType="Char(5)")]
		public string E15
		{
			get
			{
				return this._E15;
			}
			set
			{
				if ((this._E15 != value))
				{
					this.OnE15Changing(value);
					this.SendPropertyChanging();
					this._E15 = value;
					this.SendPropertyChanged("E15");
					this.OnE15Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F1", DbType="Char(5)")]
		public string F1
		{
			get
			{
				return this._F1;
			}
			set
			{
				if ((this._F1 != value))
				{
					this.OnF1Changing(value);
					this.SendPropertyChanging();
					this._F1 = value;
					this.SendPropertyChanged("F1");
					this.OnF1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F2", DbType="Char(5)")]
		public string F2
		{
			get
			{
				return this._F2;
			}
			set
			{
				if ((this._F2 != value))
				{
					this.OnF2Changing(value);
					this.SendPropertyChanging();
					this._F2 = value;
					this.SendPropertyChanged("F2");
					this.OnF2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F3", DbType="Char(5)")]
		public string F3
		{
			get
			{
				return this._F3;
			}
			set
			{
				if ((this._F3 != value))
				{
					this.OnF3Changing(value);
					this.SendPropertyChanging();
					this._F3 = value;
					this.SendPropertyChanged("F3");
					this.OnF3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F4", DbType="Char(5)")]
		public string F4
		{
			get
			{
				return this._F4;
			}
			set
			{
				if ((this._F4 != value))
				{
					this.OnF4Changing(value);
					this.SendPropertyChanging();
					this._F4 = value;
					this.SendPropertyChanged("F4");
					this.OnF4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F5", DbType="Char(5)")]
		public string F5
		{
			get
			{
				return this._F5;
			}
			set
			{
				if ((this._F5 != value))
				{
					this.OnF5Changing(value);
					this.SendPropertyChanging();
					this._F5 = value;
					this.SendPropertyChanged("F5");
					this.OnF5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F6", DbType="Char(5)")]
		public string F6
		{
			get
			{
				return this._F6;
			}
			set
			{
				if ((this._F6 != value))
				{
					this.OnF6Changing(value);
					this.SendPropertyChanging();
					this._F6 = value;
					this.SendPropertyChanged("F6");
					this.OnF6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F7", DbType="Char(5)")]
		public string F7
		{
			get
			{
				return this._F7;
			}
			set
			{
				if ((this._F7 != value))
				{
					this.OnF7Changing(value);
					this.SendPropertyChanging();
					this._F7 = value;
					this.SendPropertyChanged("F7");
					this.OnF7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F8", DbType="Char(5)")]
		public string F8
		{
			get
			{
				return this._F8;
			}
			set
			{
				if ((this._F8 != value))
				{
					this.OnF8Changing(value);
					this.SendPropertyChanging();
					this._F8 = value;
					this.SendPropertyChanged("F8");
					this.OnF8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F9", DbType="Char(5)")]
		public string F9
		{
			get
			{
				return this._F9;
			}
			set
			{
				if ((this._F9 != value))
				{
					this.OnF9Changing(value);
					this.SendPropertyChanging();
					this._F9 = value;
					this.SendPropertyChanged("F9");
					this.OnF9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F10", DbType="Char(5)")]
		public string F10
		{
			get
			{
				return this._F10;
			}
			set
			{
				if ((this._F10 != value))
				{
					this.OnF10Changing(value);
					this.SendPropertyChanging();
					this._F10 = value;
					this.SendPropertyChanged("F10");
					this.OnF10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F11", DbType="Char(5)")]
		public string F11
		{
			get
			{
				return this._F11;
			}
			set
			{
				if ((this._F11 != value))
				{
					this.OnF11Changing(value);
					this.SendPropertyChanging();
					this._F11 = value;
					this.SendPropertyChanged("F11");
					this.OnF11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F12", DbType="Char(5)")]
		public string F12
		{
			get
			{
				return this._F12;
			}
			set
			{
				if ((this._F12 != value))
				{
					this.OnF12Changing(value);
					this.SendPropertyChanging();
					this._F12 = value;
					this.SendPropertyChanged("F12");
					this.OnF12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F13", DbType="Char(5)")]
		public string F13
		{
			get
			{
				return this._F13;
			}
			set
			{
				if ((this._F13 != value))
				{
					this.OnF13Changing(value);
					this.SendPropertyChanging();
					this._F13 = value;
					this.SendPropertyChanged("F13");
					this.OnF13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F14", DbType="Char(5)")]
		public string F14
		{
			get
			{
				return this._F14;
			}
			set
			{
				if ((this._F14 != value))
				{
					this.OnF14Changing(value);
					this.SendPropertyChanging();
					this._F14 = value;
					this.SendPropertyChanged("F14");
					this.OnF14Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F15", DbType="Char(5)")]
		public string F15
		{
			get
			{
				return this._F15;
			}
			set
			{
				if ((this._F15 != value))
				{
					this.OnF15Changing(value);
					this.SendPropertyChanging();
					this._F15 = value;
					this.SendPropertyChanged("F15");
					this.OnF15Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F16", DbType="Char(5)")]
		public string F16
		{
			get
			{
				return this._F16;
			}
			set
			{
				if ((this._F16 != value))
				{
					this.OnF16Changing(value);
					this.SendPropertyChanging();
					this._F16 = value;
					this.SendPropertyChanged("F16");
					this.OnF16Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MiAnLien_Ticket", Storage="_Tickets", ThisKey="MalID", OtherKey="MalID")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Movy_MiAnLien", Storage="_Movy", ThisKey="MovieID", OtherKey="MovieID", IsForeignKey=true)]
		public Movy Movy
		{
			get
			{
				return this._Movy.Entity;
			}
			set
			{
				Movy previousValue = this._Movy.Entity;
				if (((previousValue != value) 
							|| (this._Movy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Movy.Entity = null;
						previousValue.MiAnLiens.Remove(this);
					}
					this._Movy.Entity = value;
					if ((value != null))
					{
						value.MiAnLiens.Add(this);
						this._MovieID = value.MovieID;
					}
					else
					{
						this._MovieID = default(int);
					}
					this.SendPropertyChanged("Movy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MovieTheater_MiAnLien", Storage="_MovieTheater", ThisKey="TheaterID", OtherKey="TheaterID", IsForeignKey=true)]
		public MovieTheater MovieTheater
		{
			get
			{
				return this._MovieTheater.Entity;
			}
			set
			{
				MovieTheater previousValue = this._MovieTheater.Entity;
				if (((previousValue != value) 
							|| (this._MovieTheater.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MovieTheater.Entity = null;
						previousValue.MiAnLiens.Remove(this);
					}
					this._MovieTheater.Entity = value;
					if ((value != null))
					{
						value.MiAnLiens.Add(this);
						this._TheaterID = value.TheaterID;
					}
					else
					{
						this._TheaterID = default(int);
					}
					this.SendPropertyChanged("MovieTheater");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.MiAnLien = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.MiAnLien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MovieActor")]
	public partial class MovieActor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MovieID;
		
		private int _ActorID;
		
		private EntityRef<Actor> _Actor;
		
		private EntityRef<Movy> _Movy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMovieIDChanging(int value);
    partial void OnMovieIDChanged();
    partial void OnActorIDChanging(int value);
    partial void OnActorIDChanged();
    #endregion
		
		public MovieActor()
		{
			this._Actor = default(EntityRef<Actor>);
			this._Movy = default(EntityRef<Movy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MovieID
		{
			get
			{
				return this._MovieID;
			}
			set
			{
				if ((this._MovieID != value))
				{
					if (this._Movy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMovieIDChanging(value);
					this.SendPropertyChanging();
					this._MovieID = value;
					this.SendPropertyChanged("MovieID");
					this.OnMovieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActorID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ActorID
		{
			get
			{
				return this._ActorID;
			}
			set
			{
				if ((this._ActorID != value))
				{
					if (this._Actor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActorIDChanging(value);
					this.SendPropertyChanging();
					this._ActorID = value;
					this.SendPropertyChanged("ActorID");
					this.OnActorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actor_MovieActor", Storage="_Actor", ThisKey="ActorID", OtherKey="ActorID", IsForeignKey=true)]
		public Actor Actor
		{
			get
			{
				return this._Actor.Entity;
			}
			set
			{
				Actor previousValue = this._Actor.Entity;
				if (((previousValue != value) 
							|| (this._Actor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Actor.Entity = null;
						previousValue.MovieActors.Remove(this);
					}
					this._Actor.Entity = value;
					if ((value != null))
					{
						value.MovieActors.Add(this);
						this._ActorID = value.ActorID;
					}
					else
					{
						this._ActorID = default(int);
					}
					this.SendPropertyChanged("Actor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Movy_MovieActor", Storage="_Movy", ThisKey="MovieID", OtherKey="MovieID", IsForeignKey=true)]
		public Movy Movy
		{
			get
			{
				return this._Movy.Entity;
			}
			set
			{
				Movy previousValue = this._Movy.Entity;
				if (((previousValue != value) 
							|| (this._Movy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Movy.Entity = null;
						previousValue.MovieActors.Remove(this);
					}
					this._Movy.Entity = value;
					if ((value != null))
					{
						value.MovieActors.Add(this);
						this._MovieID = value.MovieID;
					}
					else
					{
						this._MovieID = default(int);
					}
					this.SendPropertyChanged("Movy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MovieDirector")]
	public partial class MovieDirector : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MovieID;
		
		private int _DirectorID;
		
		private EntityRef<Director> _Director;
		
		private EntityRef<Movy> _Movy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMovieIDChanging(int value);
    partial void OnMovieIDChanged();
    partial void OnDirectorIDChanging(int value);
    partial void OnDirectorIDChanged();
    #endregion
		
		public MovieDirector()
		{
			this._Director = default(EntityRef<Director>);
			this._Movy = default(EntityRef<Movy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MovieID
		{
			get
			{
				return this._MovieID;
			}
			set
			{
				if ((this._MovieID != value))
				{
					if (this._Movy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMovieIDChanging(value);
					this.SendPropertyChanging();
					this._MovieID = value;
					this.SendPropertyChanged("MovieID");
					this.OnMovieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectorID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DirectorID
		{
			get
			{
				return this._DirectorID;
			}
			set
			{
				if ((this._DirectorID != value))
				{
					if (this._Director.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirectorIDChanging(value);
					this.SendPropertyChanging();
					this._DirectorID = value;
					this.SendPropertyChanged("DirectorID");
					this.OnDirectorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Director_MovieDirector", Storage="_Director", ThisKey="DirectorID", OtherKey="DirectorID", IsForeignKey=true)]
		public Director Director
		{
			get
			{
				return this._Director.Entity;
			}
			set
			{
				Director previousValue = this._Director.Entity;
				if (((previousValue != value) 
							|| (this._Director.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Director.Entity = null;
						previousValue.MovieDirectors.Remove(this);
					}
					this._Director.Entity = value;
					if ((value != null))
					{
						value.MovieDirectors.Add(this);
						this._DirectorID = value.DirectorID;
					}
					else
					{
						this._DirectorID = default(int);
					}
					this.SendPropertyChanged("Director");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Movy_MovieDirector", Storage="_Movy", ThisKey="MovieID", OtherKey="MovieID", IsForeignKey=true)]
		public Movy Movy
		{
			get
			{
				return this._Movy.Entity;
			}
			set
			{
				Movy previousValue = this._Movy.Entity;
				if (((previousValue != value) 
							|| (this._Movy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Movy.Entity = null;
						previousValue.MovieDirectors.Remove(this);
					}
					this._Movy.Entity = value;
					if ((value != null))
					{
						value.MovieDirectors.Add(this);
						this._MovieID = value.MovieID;
					}
					else
					{
						this._MovieID = default(int);
					}
					this.SendPropertyChanged("Movy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Movies")]
	public partial class Movy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MovieID;
		
		private string _Title;
		
		private string _Plot;
		
		private System.Nullable<int> _ReleaseYear;
		
		private System.Nullable<double> _IMDb;
		
		private string _Tomatometer;
		
		private string _AudienceScore;
		
		private string _Image;
		
		private string _Trailer;
		
		private System.Nullable<System.TimeSpan> _TimeOfFilm;
		
		private string _Banner;
		
		private System.Nullable<int> _ComingSoon;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<MiAnLien> _MiAnLiens;
		
		private EntitySet<MovieActor> _MovieActors;
		
		private EntitySet<MovieDirector> _MovieDirectors;
		
		private EntitySet<MoviesGenre> _MoviesGenres;
		
		private EntitySet<ReviewOfMovie> _ReviewOfMovies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMovieIDChanging(int value);
    partial void OnMovieIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPlotChanging(string value);
    partial void OnPlotChanged();
    partial void OnReleaseYearChanging(System.Nullable<int> value);
    partial void OnReleaseYearChanged();
    partial void OnIMDbChanging(System.Nullable<double> value);
    partial void OnIMDbChanged();
    partial void OnTomatometerChanging(string value);
    partial void OnTomatometerChanged();
    partial void OnAudienceScoreChanging(string value);
    partial void OnAudienceScoreChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnTrailerChanging(string value);
    partial void OnTrailerChanged();
    partial void OnTimeOfFilmChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTimeOfFilmChanged();
    partial void OnBannerChanging(string value);
    partial void OnBannerChanged();
    partial void OnComingSoonChanging(System.Nullable<int> value);
    partial void OnComingSoonChanged();
    #endregion
		
		public Movy()
		{
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._MiAnLiens = new EntitySet<MiAnLien>(new Action<MiAnLien>(this.attach_MiAnLiens), new Action<MiAnLien>(this.detach_MiAnLiens));
			this._MovieActors = new EntitySet<MovieActor>(new Action<MovieActor>(this.attach_MovieActors), new Action<MovieActor>(this.detach_MovieActors));
			this._MovieDirectors = new EntitySet<MovieDirector>(new Action<MovieDirector>(this.attach_MovieDirectors), new Action<MovieDirector>(this.detach_MovieDirectors));
			this._MoviesGenres = new EntitySet<MoviesGenre>(new Action<MoviesGenre>(this.attach_MoviesGenres), new Action<MoviesGenre>(this.detach_MoviesGenres));
			this._ReviewOfMovies = new EntitySet<ReviewOfMovie>(new Action<ReviewOfMovie>(this.attach_ReviewOfMovies), new Action<ReviewOfMovie>(this.detach_ReviewOfMovies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MovieID
		{
			get
			{
				return this._MovieID;
			}
			set
			{
				if ((this._MovieID != value))
				{
					this.OnMovieIDChanging(value);
					this.SendPropertyChanging();
					this._MovieID = value;
					this.SendPropertyChanged("MovieID");
					this.OnMovieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Plot", DbType="VarChar(MAX)")]
		public string Plot
		{
			get
			{
				return this._Plot;
			}
			set
			{
				if ((this._Plot != value))
				{
					this.OnPlotChanging(value);
					this.SendPropertyChanging();
					this._Plot = value;
					this.SendPropertyChanged("Plot");
					this.OnPlotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseYear", DbType="Int")]
		public System.Nullable<int> ReleaseYear
		{
			get
			{
				return this._ReleaseYear;
			}
			set
			{
				if ((this._ReleaseYear != value))
				{
					this.OnReleaseYearChanging(value);
					this.SendPropertyChanging();
					this._ReleaseYear = value;
					this.SendPropertyChanged("ReleaseYear");
					this.OnReleaseYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMDb", DbType="Float")]
		public System.Nullable<double> IMDb
		{
			get
			{
				return this._IMDb;
			}
			set
			{
				if ((this._IMDb != value))
				{
					this.OnIMDbChanging(value);
					this.SendPropertyChanging();
					this._IMDb = value;
					this.SendPropertyChanged("IMDb");
					this.OnIMDbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tomatometer", DbType="VarChar(10)")]
		public string Tomatometer
		{
			get
			{
				return this._Tomatometer;
			}
			set
			{
				if ((this._Tomatometer != value))
				{
					this.OnTomatometerChanging(value);
					this.SendPropertyChanging();
					this._Tomatometer = value;
					this.SendPropertyChanged("Tomatometer");
					this.OnTomatometerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudienceScore", DbType="VarChar(10)")]
		public string AudienceScore
		{
			get
			{
				return this._AudienceScore;
			}
			set
			{
				if ((this._AudienceScore != value))
				{
					this.OnAudienceScoreChanging(value);
					this.SendPropertyChanging();
					this._AudienceScore = value;
					this.SendPropertyChanged("AudienceScore");
					this.OnAudienceScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(MAX)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trailer", DbType="VarChar(MAX)")]
		public string Trailer
		{
			get
			{
				return this._Trailer;
			}
			set
			{
				if ((this._Trailer != value))
				{
					this.OnTrailerChanging(value);
					this.SendPropertyChanging();
					this._Trailer = value;
					this.SendPropertyChanged("Trailer");
					this.OnTrailerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOfFilm", DbType="Time")]
		public System.Nullable<System.TimeSpan> TimeOfFilm
		{
			get
			{
				return this._TimeOfFilm;
			}
			set
			{
				if ((this._TimeOfFilm != value))
				{
					this.OnTimeOfFilmChanging(value);
					this.SendPropertyChanging();
					this._TimeOfFilm = value;
					this.SendPropertyChanged("TimeOfFilm");
					this.OnTimeOfFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Banner", DbType="NVarChar(MAX)")]
		public string Banner
		{
			get
			{
				return this._Banner;
			}
			set
			{
				if ((this._Banner != value))
				{
					this.OnBannerChanging(value);
					this.SendPropertyChanging();
					this._Banner = value;
					this.SendPropertyChanged("Banner");
					this.OnBannerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComingSoon", DbType="Int")]
		public System.Nullable<int> ComingSoon
		{
			get
			{
				return this._ComingSoon;
			}
			set
			{
				if ((this._ComingSoon != value))
				{
					this.OnComingSoonChanging(value);
					this.SendPropertyChanging();
					this._ComingSoon = value;
					this.SendPropertyChanged("ComingSoon");
					this.OnComingSoonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Movy_Comment", Storage="_Comments", ThisKey="MovieID", OtherKey="MovieID")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Movy_MiAnLien", Storage="_MiAnLiens", ThisKey="MovieID", OtherKey="MovieID")]
		public EntitySet<MiAnLien> MiAnLiens
		{
			get
			{
				return this._MiAnLiens;
			}
			set
			{
				this._MiAnLiens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Movy_MovieActor", Storage="_MovieActors", ThisKey="MovieID", OtherKey="MovieID")]
		public EntitySet<MovieActor> MovieActors
		{
			get
			{
				return this._MovieActors;
			}
			set
			{
				this._MovieActors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Movy_MovieDirector", Storage="_MovieDirectors", ThisKey="MovieID", OtherKey="MovieID")]
		public EntitySet<MovieDirector> MovieDirectors
		{
			get
			{
				return this._MovieDirectors;
			}
			set
			{
				this._MovieDirectors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Movy_MoviesGenre", Storage="_MoviesGenres", ThisKey="MovieID", OtherKey="MovieID")]
		public EntitySet<MoviesGenre> MoviesGenres
		{
			get
			{
				return this._MoviesGenres;
			}
			set
			{
				this._MoviesGenres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Movy_ReviewOfMovie", Storage="_ReviewOfMovies", ThisKey="MovieID", OtherKey="MovieID")]
		public EntitySet<ReviewOfMovie> ReviewOfMovies
		{
			get
			{
				return this._ReviewOfMovies;
			}
			set
			{
				this._ReviewOfMovies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Movy = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Movy = null;
		}
		
		private void attach_MiAnLiens(MiAnLien entity)
		{
			this.SendPropertyChanging();
			entity.Movy = this;
		}
		
		private void detach_MiAnLiens(MiAnLien entity)
		{
			this.SendPropertyChanging();
			entity.Movy = null;
		}
		
		private void attach_MovieActors(MovieActor entity)
		{
			this.SendPropertyChanging();
			entity.Movy = this;
		}
		
		private void detach_MovieActors(MovieActor entity)
		{
			this.SendPropertyChanging();
			entity.Movy = null;
		}
		
		private void attach_MovieDirectors(MovieDirector entity)
		{
			this.SendPropertyChanging();
			entity.Movy = this;
		}
		
		private void detach_MovieDirectors(MovieDirector entity)
		{
			this.SendPropertyChanging();
			entity.Movy = null;
		}
		
		private void attach_MoviesGenres(MoviesGenre entity)
		{
			this.SendPropertyChanging();
			entity.Movy = this;
		}
		
		private void detach_MoviesGenres(MoviesGenre entity)
		{
			this.SendPropertyChanging();
			entity.Movy = null;
		}
		
		private void attach_ReviewOfMovies(ReviewOfMovie entity)
		{
			this.SendPropertyChanging();
			entity.Movy = this;
		}
		
		private void detach_ReviewOfMovies(ReviewOfMovie entity)
		{
			this.SendPropertyChanging();
			entity.Movy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoviesGenres")]
	public partial class MoviesGenre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MovieID;
		
		private int _GenreID;
		
		private EntityRef<Genre> _Genre;
		
		private EntityRef<Movy> _Movy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMovieIDChanging(int value);
    partial void OnMovieIDChanged();
    partial void OnGenreIDChanging(int value);
    partial void OnGenreIDChanged();
    #endregion
		
		public MoviesGenre()
		{
			this._Genre = default(EntityRef<Genre>);
			this._Movy = default(EntityRef<Movy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MovieID
		{
			get
			{
				return this._MovieID;
			}
			set
			{
				if ((this._MovieID != value))
				{
					if (this._Movy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMovieIDChanging(value);
					this.SendPropertyChanging();
					this._MovieID = value;
					this.SendPropertyChanged("MovieID");
					this.OnMovieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenreID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GenreID
		{
			get
			{
				return this._GenreID;
			}
			set
			{
				if ((this._GenreID != value))
				{
					if (this._Genre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenreIDChanging(value);
					this.SendPropertyChanging();
					this._GenreID = value;
					this.SendPropertyChanged("GenreID");
					this.OnGenreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genre_MoviesGenre", Storage="_Genre", ThisKey="GenreID", OtherKey="GenreID", IsForeignKey=true)]
		public Genre Genre
		{
			get
			{
				return this._Genre.Entity;
			}
			set
			{
				Genre previousValue = this._Genre.Entity;
				if (((previousValue != value) 
							|| (this._Genre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Genre.Entity = null;
						previousValue.MoviesGenres.Remove(this);
					}
					this._Genre.Entity = value;
					if ((value != null))
					{
						value.MoviesGenres.Add(this);
						this._GenreID = value.GenreID;
					}
					else
					{
						this._GenreID = default(int);
					}
					this.SendPropertyChanged("Genre");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Movy_MoviesGenre", Storage="_Movy", ThisKey="MovieID", OtherKey="MovieID", IsForeignKey=true)]
		public Movy Movy
		{
			get
			{
				return this._Movy.Entity;
			}
			set
			{
				Movy previousValue = this._Movy.Entity;
				if (((previousValue != value) 
							|| (this._Movy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Movy.Entity = null;
						previousValue.MoviesGenres.Remove(this);
					}
					this._Movy.Entity = value;
					if ((value != null))
					{
						value.MoviesGenres.Add(this);
						this._MovieID = value.MovieID;
					}
					else
					{
						this._MovieID = default(int);
					}
					this.SendPropertyChanged("Movy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MovieTheater")]
	public partial class MovieTheater : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TheaterID;
		
		private string _TheaterName;
		
		private int _CityID;
		
		private System.Nullable<int> _TypeID;
		
		private string _Address;
		
		private EntitySet<MiAnLien> _MiAnLiens;
		
		private EntityRef<City> _City;
		
		private EntityRef<Theater> _Theater;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTheaterIDChanging(int value);
    partial void OnTheaterIDChanged();
    partial void OnTheaterNameChanging(string value);
    partial void OnTheaterNameChanged();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnTypeIDChanging(System.Nullable<int> value);
    partial void OnTypeIDChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public MovieTheater()
		{
			this._MiAnLiens = new EntitySet<MiAnLien>(new Action<MiAnLien>(this.attach_MiAnLiens), new Action<MiAnLien>(this.detach_MiAnLiens));
			this._City = default(EntityRef<City>);
			this._Theater = default(EntityRef<Theater>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheaterID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TheaterID
		{
			get
			{
				return this._TheaterID;
			}
			set
			{
				if ((this._TheaterID != value))
				{
					this.OnTheaterIDChanging(value);
					this.SendPropertyChanging();
					this._TheaterID = value;
					this.SendPropertyChanged("TheaterID");
					this.OnTheaterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheaterName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TheaterName
		{
			get
			{
				return this._TheaterName;
			}
			set
			{
				if ((this._TheaterName != value))
				{
					this.OnTheaterNameChanging(value);
					this.SendPropertyChanging();
					this._TheaterName = value;
					this.SendPropertyChanged("TheaterName");
					this.OnTheaterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int NOT NULL")]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int")]
		public System.Nullable<int> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._Theater.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MovieTheater_MiAnLien", Storage="_MiAnLiens", ThisKey="TheaterID", OtherKey="TheaterID")]
		public EntitySet<MiAnLien> MiAnLiens
		{
			get
			{
				return this._MiAnLiens;
			}
			set
			{
				this._MiAnLiens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_MovieTheater", Storage="_City", ThisKey="CityID", OtherKey="CityID", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.MovieTheaters.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.MovieTheaters.Add(this);
						this._CityID = value.CityID;
					}
					else
					{
						this._CityID = default(int);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Theater_MovieTheater", Storage="_Theater", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true)]
		public Theater Theater
		{
			get
			{
				return this._Theater.Entity;
			}
			set
			{
				Theater previousValue = this._Theater.Entity;
				if (((previousValue != value) 
							|| (this._Theater.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Theater.Entity = null;
						previousValue.MovieTheaters.Remove(this);
					}
					this._Theater.Entity = value;
					if ((value != null))
					{
						value.MovieTheaters.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Theater");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MiAnLiens(MiAnLien entity)
		{
			this.SendPropertyChanging();
			entity.MovieTheater = this;
		}
		
		private void detach_MiAnLiens(MiAnLien entity)
		{
			this.SendPropertyChanging();
			entity.MovieTheater = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.News")]
	public partial class New : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NewsID;
		
		private System.Nullable<int> _UserID;
		
		private string _Title;
		
		private string _Image1;
		
		private string _Content1;
		
		private string _Image2;
		
		private string _Content2;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
		private string _Photo;
		
		private System.Nullable<decimal> _ReadCount;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsIDChanging(int value);
    partial void OnNewsIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnImage1Changing(string value);
    partial void OnImage1Changed();
    partial void OnContent1Changing(string value);
    partial void OnContent1Changed();
    partial void OnImage2Changing(string value);
    partial void OnImage2Changed();
    partial void OnContent2Changing(string value);
    partial void OnContent2Changed();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    partial void OnPhotoChanging(string value);
    partial void OnPhotoChanged();
    partial void OnReadCountChanging(System.Nullable<decimal> value);
    partial void OnReadCountChanged();
    #endregion
		
		public New()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NewsID
		{
			get
			{
				return this._NewsID;
			}
			set
			{
				if ((this._NewsID != value))
				{
					this.OnNewsIDChanging(value);
					this.SendPropertyChanging();
					this._NewsID = value;
					this.SendPropertyChanged("NewsID");
					this.OnNewsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image1", DbType="NVarChar(MAX)")]
		public string Image1
		{
			get
			{
				return this._Image1;
			}
			set
			{
				if ((this._Image1 != value))
				{
					this.OnImage1Changing(value);
					this.SendPropertyChanging();
					this._Image1 = value;
					this.SendPropertyChanged("Image1");
					this.OnImage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content1", DbType="NVarChar(MAX)")]
		public string Content1
		{
			get
			{
				return this._Content1;
			}
			set
			{
				if ((this._Content1 != value))
				{
					this.OnContent1Changing(value);
					this.SendPropertyChanging();
					this._Content1 = value;
					this.SendPropertyChanged("Content1");
					this.OnContent1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image2", DbType="NVarChar(MAX)")]
		public string Image2
		{
			get
			{
				return this._Image2;
			}
			set
			{
				if ((this._Image2 != value))
				{
					this.OnImage2Changing(value);
					this.SendPropertyChanging();
					this._Image2 = value;
					this.SendPropertyChanged("Image2");
					this.OnImage2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content2", DbType="NVarChar(MAX)")]
		public string Content2
		{
			get
			{
				return this._Content2;
			}
			set
			{
				if ((this._Content2 != value))
				{
					this.OnContent2Changing(value);
					this.SendPropertyChanging();
					this._Content2 = value;
					this.SendPropertyChanged("Content2");
					this.OnContent2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(MAX)")]
		public string Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadCount", DbType="Money")]
		public System.Nullable<decimal> ReadCount
		{
			get
			{
				return this._ReadCount;
			}
			set
			{
				if ((this._ReadCount != value))
				{
					this.OnReadCountChanging(value);
					this.SendPropertyChanging();
					this._ReadCount = value;
					this.SendPropertyChanged("ReadCount");
					this.OnReadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_New", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.News.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.News.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReviewOfMovie")]
	public partial class ReviewOfMovie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MovieID;
		
		private int _YoutubeID;
		
		private EntityRef<Movy> _Movy;
		
		private EntityRef<YoutubeReview> _YoutubeReview;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMovieIDChanging(int value);
    partial void OnMovieIDChanged();
    partial void OnYoutubeIDChanging(int value);
    partial void OnYoutubeIDChanged();
    #endregion
		
		public ReviewOfMovie()
		{
			this._Movy = default(EntityRef<Movy>);
			this._YoutubeReview = default(EntityRef<YoutubeReview>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MovieID
		{
			get
			{
				return this._MovieID;
			}
			set
			{
				if ((this._MovieID != value))
				{
					if (this._Movy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMovieIDChanging(value);
					this.SendPropertyChanging();
					this._MovieID = value;
					this.SendPropertyChanged("MovieID");
					this.OnMovieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YoutubeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int YoutubeID
		{
			get
			{
				return this._YoutubeID;
			}
			set
			{
				if ((this._YoutubeID != value))
				{
					if (this._YoutubeReview.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnYoutubeIDChanging(value);
					this.SendPropertyChanging();
					this._YoutubeID = value;
					this.SendPropertyChanged("YoutubeID");
					this.OnYoutubeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Movy_ReviewOfMovie", Storage="_Movy", ThisKey="MovieID", OtherKey="MovieID", IsForeignKey=true)]
		public Movy Movy
		{
			get
			{
				return this._Movy.Entity;
			}
			set
			{
				Movy previousValue = this._Movy.Entity;
				if (((previousValue != value) 
							|| (this._Movy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Movy.Entity = null;
						previousValue.ReviewOfMovies.Remove(this);
					}
					this._Movy.Entity = value;
					if ((value != null))
					{
						value.ReviewOfMovies.Add(this);
						this._MovieID = value.MovieID;
					}
					else
					{
						this._MovieID = default(int);
					}
					this.SendPropertyChanged("Movy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="YoutubeReview_ReviewOfMovie", Storage="_YoutubeReview", ThisKey="YoutubeID", OtherKey="YoutubeID", IsForeignKey=true)]
		public YoutubeReview YoutubeReview
		{
			get
			{
				return this._YoutubeReview.Entity;
			}
			set
			{
				YoutubeReview previousValue = this._YoutubeReview.Entity;
				if (((previousValue != value) 
							|| (this._YoutubeReview.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._YoutubeReview.Entity = null;
						previousValue.ReviewOfMovies.Remove(this);
					}
					this._YoutubeReview.Entity = value;
					if ((value != null))
					{
						value.ReviewOfMovies.Add(this);
						this._YoutubeID = value.YoutubeID;
					}
					else
					{
						this._YoutubeID = default(int);
					}
					this.SendPropertyChanged("YoutubeReview");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Theater")]
	public partial class Theater : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeID;
		
		private string _Theater1;
		
		private string _Logo;
		
		private EntitySet<MovieTheater> _MovieTheaters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnTheater1Changing(string value);
    partial void OnTheater1Changed();
    partial void OnLogoChanging(string value);
    partial void OnLogoChanged();
    #endregion
		
		public Theater()
		{
			this._MovieTheaters = new EntitySet<MovieTheater>(new Action<MovieTheater>(this.attach_MovieTheaters), new Action<MovieTheater>(this.detach_MovieTheaters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Theater", Storage="_Theater1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Theater1
		{
			get
			{
				return this._Theater1;
			}
			set
			{
				if ((this._Theater1 != value))
				{
					this.OnTheater1Changing(value);
					this.SendPropertyChanging();
					this._Theater1 = value;
					this.SendPropertyChanged("Theater1");
					this.OnTheater1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="NVarChar(MAX)")]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Theater_MovieTheater", Storage="_MovieTheaters", ThisKey="TypeID", OtherKey="TypeID")]
		public EntitySet<MovieTheater> MovieTheaters
		{
			get
			{
				return this._MovieTheaters;
			}
			set
			{
				this._MovieTheaters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MovieTheaters(MovieTheater entity)
		{
			this.SendPropertyChanging();
			entity.Theater = this;
		}
		
		private void detach_MovieTheaters(MovieTheater entity)
		{
			this.SendPropertyChanging();
			entity.Theater = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket")]
	public partial class Ticket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TicketID;
		
		private int _MalID;
		
		private double _Money;
		
		private string _Seat;
		
		private System.Nullable<int> _Vip;
		
		private System.Nullable<int> _Normal;
		
		private int _UserID;
		
		private System.Nullable<int> _AmountSeats;
		
		private EntityRef<MiAnLien> _MiAnLien;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTicketIDChanging(int value);
    partial void OnTicketIDChanged();
    partial void OnMalIDChanging(int value);
    partial void OnMalIDChanged();
    partial void OnMoneyChanging(double value);
    partial void OnMoneyChanged();
    partial void OnSeatChanging(string value);
    partial void OnSeatChanged();
    partial void OnVipChanging(System.Nullable<int> value);
    partial void OnVipChanged();
    partial void OnNormalChanging(System.Nullable<int> value);
    partial void OnNormalChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnAmountSeatsChanging(System.Nullable<int> value);
    partial void OnAmountSeatsChanged();
    #endregion
		
		public Ticket()
		{
			this._MiAnLien = default(EntityRef<MiAnLien>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TicketID
		{
			get
			{
				return this._TicketID;
			}
			set
			{
				if ((this._TicketID != value))
				{
					this.OnTicketIDChanging(value);
					this.SendPropertyChanging();
					this._TicketID = value;
					this.SendPropertyChanged("TicketID");
					this.OnTicketIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MalID", DbType="Int NOT NULL")]
		public int MalID
		{
			get
			{
				return this._MalID;
			}
			set
			{
				if ((this._MalID != value))
				{
					if (this._MiAnLien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMalIDChanging(value);
					this.SendPropertyChanging();
					this._MalID = value;
					this.SendPropertyChanged("MalID");
					this.OnMalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Money", DbType="Float NOT NULL")]
		public double Money
		{
			get
			{
				return this._Money;
			}
			set
			{
				if ((this._Money != value))
				{
					this.OnMoneyChanging(value);
					this.SendPropertyChanging();
					this._Money = value;
					this.SendPropertyChanged("Money");
					this.OnMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seat", DbType="NVarChar(500)")]
		public string Seat
		{
			get
			{
				return this._Seat;
			}
			set
			{
				if ((this._Seat != value))
				{
					this.OnSeatChanging(value);
					this.SendPropertyChanging();
					this._Seat = value;
					this.SendPropertyChanged("Seat");
					this.OnSeatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vip", DbType="Int")]
		public System.Nullable<int> Vip
		{
			get
			{
				return this._Vip;
			}
			set
			{
				if ((this._Vip != value))
				{
					this.OnVipChanging(value);
					this.SendPropertyChanging();
					this._Vip = value;
					this.SendPropertyChanged("Vip");
					this.OnVipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Normal", DbType="Int")]
		public System.Nullable<int> Normal
		{
			get
			{
				return this._Normal;
			}
			set
			{
				if ((this._Normal != value))
				{
					this.OnNormalChanging(value);
					this.SendPropertyChanging();
					this._Normal = value;
					this.SendPropertyChanged("Normal");
					this.OnNormalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountSeats", DbType="Int")]
		public System.Nullable<int> AmountSeats
		{
			get
			{
				return this._AmountSeats;
			}
			set
			{
				if ((this._AmountSeats != value))
				{
					this.OnAmountSeatsChanging(value);
					this.SendPropertyChanging();
					this._AmountSeats = value;
					this.SendPropertyChanged("AmountSeats");
					this.OnAmountSeatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MiAnLien_Ticket", Storage="_MiAnLien", ThisKey="MalID", OtherKey="MalID", IsForeignKey=true)]
		public MiAnLien MiAnLien
		{
			get
			{
				return this._MiAnLien.Entity;
			}
			set
			{
				MiAnLien previousValue = this._MiAnLien.Entity;
				if (((previousValue != value) 
							|| (this._MiAnLien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MiAnLien.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._MiAnLien.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._MalID = value.MalID;
					}
					else
					{
						this._MalID = default(int);
					}
					this.SendPropertyChanged("MiAnLien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _Password;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _Phone;
		
		private System.Nullable<bool> _Permission;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<New> _News;
		
		private EntitySet<Ticket> _Tickets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPermissionChanging(System.Nullable<bool> value);
    partial void OnPermissionChanged();
    #endregion
		
		public User()
		{
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._News = new EntitySet<New>(new Action<New>(this.attach_News), new Action<New>(this.detach_News));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Permission", DbType="Bit")]
		public System.Nullable<bool> Permission
		{
			get
			{
				return this._Permission;
			}
			set
			{
				if ((this._Permission != value))
				{
					this.OnPermissionChanging(value);
					this.SendPropertyChanging();
					this._Permission = value;
					this.SendPropertyChanged("Permission");
					this.OnPermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_Comments", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_New", Storage="_News", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<New> News
		{
			get
			{
				return this._News;
			}
			set
			{
				this._News.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket", Storage="_Tickets", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_News(New entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_News(New entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
